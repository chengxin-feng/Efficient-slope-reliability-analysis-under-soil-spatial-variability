function [RF] = CreateRF(name,mu,sigma,correlation,...
    centroids,percentage)

NE  = size(centroids,1);   
if size(mu,1)==1
    mu      =   mu*ones(NE,1);  
end
if size(sigma,1)==1
    sigma   =   sigma*ones(NE,1);  
end

Dist    = zeros(NE,NE);  
% for i=1:size(centroids,2)
%     Dist1    =  Dist + ( repmat(centroids(:,i),1,NE) - ...
%         repmat(centroids(:,i)',NE,1)); 
% end
% for i=1:size(centroids,2)
%     Dist2    =  Dist + ( repmat(centroids(:,i),1,NE) - ...
%         repmat(centroids(:,i)',NE,1));  
% end
Dist1    = abs( Dist + ( repmat(centroids(:,1),1,NE) - repmat(centroids(:,1)',NE,1)));
Dist2    = abs( Dist + ( repmat(centroids(:,2),1,NE) - repmat(centroids(:,2)',NE,1)));
Cor     = correlation(Dist1,Dist2); 
Cov     = Cor.*(sigma*sigma'); 
CovG   = log(Cov./(mu*mu')+1);     
muG    = log(mu) - 1/2*diag(CovG); 
[PhiG,LambdaG]  = eig(CovG);   
LambdaG         = diag(LambdaG);   
ind             = LambdaG>0;       
LambdaG         = LambdaG(ind);    
PhiG            = PhiG(:,ind);      
[LambdaG,ind]   = sort(LambdaG,'descend');  
PhiG            = PhiG(:,ind);             
%NRT             = 80;             %
 NRT = find(cumsum(LambdaG)/sum(LambdaG)>=percentage,1); 
LambdaG         = LambdaG(1:NRT); 
PhiG            = PhiG(:,1:NRT);    
B               = PhiG*diag(sqrt(LambdaG));  
Std2Phy = @(z)exp(muG+B*z);
RF  = struct(...
    'type','Lognormal Random Field',...      
    'name',name,...            
    'mu',mu,...              
    'Cov',Cov,...             
    'muG',muG,...               
    'CovG',CovG,...             
    'B',B,...                   
    'Std2Phy',@(z)Std2Phy(z),...    
    'Phy2Std',@(x)Phy2Std(x),...   
    'dxdz',@(z)dxdz(z),...
    'NRT',NRT,... 
    'PhiG',PhiG,...  
    'LambdaG',diag(LambdaG)... 
    );
return